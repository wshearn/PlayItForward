@using System.Collections
@using PiF.Models
@using Telerik.Web.Mvc.UI
@model NewPiFModel
@section HeadContent {
    <script type="text/javascript" src="~/Scripts/jquery-1.7.2.min.js"> </script>
    <script type="text/javascript" src="~/Scripts/jquery-ui.min.js"> </script>
    @this.Html.Telerik().ScriptRegistrar().jQuery(false);
    <link href="@this.Url.Content("~/Content/2012.1.214/telerik.common.min.css")" rel="stylesheet" type="text/css" />
    <link href="@this.Url.Content("~/Content/2012.1.214/telerik.vista.min.css")" rel="stylesheet" type="text/css" />
    <link href="@this.Url.Content("~/Content/ui-lightness/jquery-ui-1.8.20.custom.css")" rel="stylesheet" type="text/css" />

    <script type="text/javascript">
        function Grid_onError(e) {
            //`this` is the DOM element of the grid
            var grid = $(this).data("tGrid");

            //the current XMLHttpRequest object
            var xhr = e.XMLHttpRequest;
            //the text status of the error - "timeout", "error" etc.
            var status = e.textStatus;

            if (status == "error") {
                //xhr.status is the HTTP code returned by the server
                if (xhr.status == "404") {
                    alert("requested url not found");
                }

                if (e.XMLHttpRequest.status == "500") {
                    alert("The server was unable to process your request.\n" + e.XMLHttpRequest.responseText);
                    e.preventDefault();
                }
            }
        }

//        function Grid_onEdit(e) {
//            if (e.mode == "insert") {
//                $(e.form).find('#ID').data('tDropDownList').select(function(dataItem) {
//                    return dataItem.Text == e.dataItem['Name'];
//                });
//            }

//            if (e.mode == "edit") {
//                $('#ID').data('tDropDownList').disable();
//            }
//        }
    </script>
}
@{
    this.ViewBag.Title = "Create a new PiF";

}
<h2>@this.ViewBag.Title</h2>
@this.Html.ValidationSummary(true)
<div class="editor-label">
    @this.Html.Label("Grid", "Add the games you want to PiF")
</div>

@(this.Html.Telerik().Grid<PiFGame>().Name("Grid").DataKeys(keys => keys.Add(p => p.ID))
.ToolBar(commands => commands.Insert().ButtonType(GridButtonType.Text))
.DataBinding(dataBinding => dataBinding.Ajax().Select("SelectAjaxEditing", "Grid")
    .Insert("InsertAjaxEditing", "Grid").Update("UpdateAjaxEditing", "Grid").Delete("DeleteAjaxEditing", "Grid"))
    .Columns(columns =>
    {
        columns.Bound(p => p.Game.id).ReadOnly(true).Width(80);
        columns.Bound(p => p.Name).Width(400);
        columns.Bound(p => p.Count).Width(80);
        columns.Bound(p => p.PointWorth).Width(80);
        columns.Command(commands =>
            {
                commands.Edit().ButtonType(GridButtonType.Text);
                commands.Delete().ButtonType(GridButtonType.Text);
            }).Width(180).Title("Commands");
        
    }).Editable(editing => editing.Mode(GridEditMode.InLine)).Pageable().Scrollable().Sortable().ClientEvents(events => events.OnError("Grid_onError")))
<br />
@using (this.Html.BeginForm("New", "PiF"))
{
    <div class="editor-label">
        @this.Html.LabelFor(m => m.ThreadTitle)
    </div>
    <div class="editor-field">
        @this.Html.TextBoxFor(m => m.ThreadTitle, new { maxlength = 300 })
        @this.Html.ValidationMessageFor(m => m.ThreadTitle)
    </div>
    <div class="editor-label">
        @this.Html.LabelFor(m => m.SelfText)
    </div>
    <div class="editor-field">
        @this.Html.TextAreaFor(m => m.SelfText, new { maxlength = 900 })
        @this.Html.ValidationMessageFor(m => m.SelfText)
    </div>
    if (this.Model.CaptchaRequired)
    {
        <div class="editor-label">
            @this.Html.LabelFor(m => m.Captcha)
        </div>
        <img src="@this.Url.Content("http://reddit.com/captcha/" + this.Session["CaptchaID"] + ".png")" />
        <div class="captcha-field">
            @this.Html.TextBoxFor(m => m.Captcha, new { maxlength = 8 })
        </div>
        this.Html.ValidationMessageFor(m => m.Captcha);
    }

    <input type="submit" value="Create PiF" />
}