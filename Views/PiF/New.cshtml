@using PiF.Models
@using Telerik.Web.Mvc.UI
@model NewPiFModel
@section HeadContent {
    <script type="text/javascript" src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.7.2.min.js"></script>
    <script type="text/javascript" src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.20/jquery-ui.min.js"> </script>
    @Html.Telerik().ScriptRegistrar().jQuery(false);
    <link href="@Url.Content("~/Content/2012.1.214/telerik.common.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/2012.1.214/telerik.vista.min.css")" rel="stylesheet" type="text/css" />
    <script src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.20/themes/ui-lightness/jquery-ui.css"></script>

    <script type="text/javascript">
        function Grid_onError(e) {
            //`this` is the DOM element of the grid
            var grid = $(this).data("tGrid");

            //the current XMLHttpRequest object
            var xhr = e.XMLHttpRequest;
            //the text status of the error - "timeout", "error" etc.
            var status = e.textStatus;

            if (status == "error") {
                //xhr.status is the HTTP code returned by the server
                if (xhr.status == "404") {
                    alert("requested url not found");
                }

                if (e.XMLHttpRequest.status == "500") {
                    alert("The server was unable to process your request.\n" + e.XMLHttpRequest.responseText);
                    e.preventDefault();
                }
            }
        }
    </script>
}

<h2>@ViewBag.Title</h2>

@Html.ValidationSummary(true)
<div class="editor-label">
    @Html.Label("Grid", "Add the games you want to PiF")
</div>

@(Html.Telerik().Grid<PiFGame>().Name("NewGameGrid").DataKeys(keys => keys.Add(p => p.ID)).ToolBar(commands => commands.Insert().ButtonType(GridButtonType.Text)).DataBinding(dataBinding => dataBinding.Ajax().Select("SelectAjaxEditing", "NewGameGrid").Insert("InsertAjaxEditing", "NewGameGrid").Update("UpdateAjaxEditing", "NewGameGrid").Delete("DeleteAjaxEditing", "NewGameGrid")).Columns(columns =>
      {
          columns.Bound(p => p.Name).Width(400);
          columns.Bound(p => p.Count).Width(80);
          columns.Bound(p => p.PointWorth).Width(80);
          columns.Bound(p => p.SteamID).Title("Steam ID").Width(80);
          columns.Command(commands =>
              {
                  commands.Edit().ButtonType(GridButtonType.Text);
                  commands.Delete().ButtonType(GridButtonType.Text);
              }).Width(180).Title("Commands");
      }).Editable(editing => editing.Mode(GridEditMode.InLine)).Pageable(x => x.PageSize(20)).Scrollable().Sortable().BindTo(SessionNewGamesRepository.All()).ClientEvents(events => events.OnError("Grid_onError")))
<br />
@using (Html.BeginForm("New", "PiF"))
{
    <div class="editor-label">
        @Html.LabelFor(m => m.ThreadTitle)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(m => m.ThreadTitle, new { maxlength = 300 })
        @Html.ValidationMessageFor(m => m.ThreadTitle)
    </div>
    <div class="editor-label">
        @Html.LabelFor(m => m.SelfText)
    </div>
    <div class="editor-field">
        @Html.TextAreaFor(m => m.SelfText, new { maxlength = 900 })
        @Html.ValidationMessageFor(m => m.SelfText)
    </div>
    if (Model.CaptchaRequired)
    {
        <div class="editor-label">
            @Html.LabelFor(m => m.Captcha)
        </div>
        <img src="@Url.Content("http://reddit.com/captcha/" + Session["CaptchaID"] + ".png")" />
        <div class="captcha-field">
            @Html.TextBoxFor(m => m.Captcha, new { maxlength = 8 })
        </div>
        Html.ValidationMessageFor(m => m.Captcha);
    }

    <input type="submit" value="Create PiF" />
}