@using System.Collections
@using PiF.Models
@using Telerik.Web.Mvc.UI
@model CompletePiFModel
@section HeadContent {
    <link href="@Url.Content("~/Content/2012.1.214/telerik.common.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/2012.1.214/telerik.vista.min.css")" rel="stylesheet" type="text/css" />
    <script type="text/javascript">
        function Grid_onError(e) {
            //`this` is the DOM element of the grid
            var grid = $(this).data("tGrid");

            //the current XMLHttpRequest object
            var xhr = e.XMLHttpRequest;
            //the text status of the error - "timeout", "error" etc.
            var status = e.textStatus;

            if (status == "error") {
                //xhr.status is the HTTP code returned by the server
                if (xhr.status == "404") {
                    alert("requested url not found");
                }

                if (e.XMLHttpRequest.status == "500") {
                    alert("The server was unable to process your request.\n" + e.XMLHttpRequest.responseText);
                    e.preventDefault();
                }
            }
        }
        function Grid_onEdit(e) {
            if (e.mode == "insert") {
                $(e.form).find('#ID').data('tDropDownList').select(function(dataItem) {
                    return dataItem.Text == e.dataItem['Name'];
                });
            }

            if ( e.mode == "edit") {
                $('#ID').data('tDropDownList').disable();
            }
        }
    </script>
}
@{
    ViewBag.Title = "Complete PiF";
}

<h2>@ViewBag.Title</h2>

@(Html.Telerik().Grid<PiF.Models.PiF>()
        .Name("Grid")
        .DataKeys(keys => keys.Add(p => p.ID))
        .ToolBar(commands => commands.Insert().ButtonType(GridButtonType.Text))
        .DataBinding(dataBinding => dataBinding.Ajax()
            .Select("SelectAjaxEditing", "Grid")
            .Update("UpdateAjaxEditing", "Grid")
            .Insert("InsertAjaxEditing","Grid")
            .Delete("DeleteAjaxEditing", "Grid"))
        .Columns(columns =>
        {
            columns.Bound(p => p.SteamAppID).Width(80);
            columns.Bound(p => p.Game).Width(200);
            columns.ForeignKey(o => o.ID, (IEnumerable)ViewData["users"], "ID", "Username").Width(200);
            //columns.Bound(p => p.Username).Width(80);
            columns.Bound(p => p.PointWorth).Width(80);
            columns.Command(commands =>
            {
                commands.Edit().ButtonType(GridButtonType.Text);
                commands.Delete().ButtonType(GridButtonType.Text);
            }).Width(180).Title("Commands");
        })
        .Editable(editing => editing.Mode(GridEditMode.InLine))
        .Pageable()
        .Scrollable()
        .Sortable()
        .ClientEvents(events => events.OnError("Grid_onError").OnEdit("Grid_onEdit"))
        )