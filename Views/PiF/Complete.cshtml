@using PiF.Models
@using Telerik.Web.Mvc.UI
@model CompletePiFModel
@section HeadContent {
    <script type="text/javascript" src="~/Scripts/jquery-1.7.2.min.js"> </script>
    <script type="text/javascript" src="~/Scripts/jquery-ui.min.js"> </script>
    @Html.Telerik().ScriptRegistrar().jQuery(false);
    <link href="@Url.Content("~/Content/2012.1.214/telerik.common.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/2012.1.214/telerik.vista.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/ui-lightness/jquery-ui-1.8.20.custom.css")" rel="stylesheet" type="text/css" />

    <script type="text/javascript">
        function Grid_onError(e) {
            //`this` is the DOM element of the grid
            var grid = $(this).data("tGrid");

            //the current XMLHttpRequest object
            var xhr = e.XMLHttpRequest;
            //the text status of the error - "timeout", "error" etc.
            var status = e.textStatus;

            if (status == "error") {
                //xhr.status is the HTTP code returned by the server
                if (xhr.status == "404") {
                    alert("requested url not found");
                }

                if (e.XMLHttpRequest.status == "500") {
                    alert("The server was unable to process your request.\n" + e.XMLHttpRequest.responseText);
                    e.preventDefault();
                }
            }
        }

    //function Grid_onEdit(e) {
        //    if (e.mode == "insert") {
        //        $(e.form).find('#ID').data('tDropDownList').select(function (dataItem) {
        //            return dataItem.Text == e.dataItem['Name'];
        //        });
        //    }

        //    if (e.mode == "edit") {
        //        $('#ID').data('tDropDownList').disable();
        //    }
        //}
    </script>
}
@{
    ViewBag.Title = "Complete PiF";
}

<h2>@ViewBag.Title</h2>

@Html.ValidationSummary(false)

@(Html.Telerik().Grid<PiFGameComplete>().Name("CompleteGrid").DataKeys(keys => keys.Add(p => p.ID))
      //.ToolBar(commands => commands.Insert().ButtonType(GridButtonType.Text))
      .DataBinding(dataBinding => dataBinding.Ajax().Select("SelectAjaxEditing", "CompleteGrid").Update("UpdateAjaxEditing", "CompleteGrid").Insert("InsertAjaxEditing", "CompleteGrid").Delete("DeleteAjaxEditing", "CompleteGrid")).Columns(columns =>
          {
              columns.Bound(p => p.SteamID).Width(80);
              columns.Bound(p => p.Name).ReadOnly(true).Width(200);
              columns.Bound(p => p.WinnerUserName).Width(80);
              columns.Bound(p => p.PointWorth).Width(80);
              columns.Command(commands => commands.Edit().ButtonType(GridButtonType.Text)).Width(180).Title("Commands");
          }).Editable(editing => editing.Mode(GridEditMode.InLine)).Pageable().Scrollable().Sortable().BindTo(SessionCompleteGamesRepository.All()).ClientEvents(events => events.OnError("Grid_onError")))
@using (Html.BeginForm())
{
    <br />
    <input type="submit" value="Complete PiF" />
}