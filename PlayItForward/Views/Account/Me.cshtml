@using System.Data.SqlTypes
@using System.Linq
@model IEnumerable<PiF.Models.Thread>


@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>@ViewBag.Title</h1>
            </hgroup>
                    <p>Games Given: @PiF.Models.AccountHelper.CurrentUser.GivenCount<br/>Games Received: @PiF.Models.AccountHelper.CurrentUser.ReceivedCount</p>
        </div>
    </section>
}
        <p>
    @Html.ActionLink("Create New", "New", "PiF")
        </p>
<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EndDate)
        </th>
        <th>Link
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @item.CreatedDate.ToString("d")
            </td>
            <td>
                @if (item.EndDate == SqlDateTime.MinValue)
                {
                    <text>Not completed</text>
                }
                else
                {
                @Html.DisplayFor(modelItem => item.EndDate)
                }
            </td>
            <td>
                <a href="@String.Format("http://redd.it/{0}", item.ThingID)">@String.Format("http://redd.it/{0}", item.ThingID)</a>
            </td>
            <td>
                @{ bool canEdit = item.ThreadGames.Any(tg => tg.WinnerID == null); }
                
                @if (canEdit)
                {
                    @Html.ActionLink("Edit", "Edit", "PiF", new { item.ThingID }, null)
                    <text> | @Html.ActionLink("Complete", "Complete", "PiF", new { item.ThingID }, null)</text>
                }
                else
                {
                    @Html.ActionLink("View", "View", "PiF", new { item.ThingID }, null)
                }
            </td>
        </tr>
    }
</table>