@using System.Data.SqlTypes
@using PiF
@using PiF.Models
@model PiFListModel
@{ ViewBag.Title = Html.DisplayFor(model => model.Thread.Title); }
@section scripts {
    @Scripts.Render("~/bundles/profile")
    <script type="text/javascript">
        $(document).ready(function () { jQuery("time.timeago").timeago(); });
        function GetRedditInfo(thingId) {
            $.getJSON("http://www.reddit.com/comments/" + thingId + ".json?jsonp=?", function (data) {
                var tempHtml = $('<div/>').html(data[0].data.children[0].data.selftext_html).text();
                $("#selfText-" + thingId).html(tempHtml);
                $("#commentCount").text(data[0].data.children[0].data.num_comments + " comments");

                $.each(data[1].data.children,
                    function (i, post) {
                        var comment = $('<div/>').html(post.data.body_html).text();
                        var date = jQuery.timeago(new Date([post.data.created_utc] * 1000));

                        $("#reddit-content").append("<div class=\"parent_container\"><div class=\"comment parent\"><div id=\"avatar-{0}\" class=\"avatar_container\"></div>".format(post.data.id)
                            + "<div class=\"body_container\"><div class=\"author_name\"><a href=\"/user/{0}\">{0}</a><span class=\"author_date\">{1}</span>".format(post.data.author, date) +
                            " <span class=\"points\" id=\"points-{0}\"></span></div><div class=\"user_body\">".format(post.data.id)
                            + "<div class=\"comment_body markdown\">{0}</div></div></div></div></div>".format(comment));
                        $.getJSON("/api/users/?username=" + post.data.author,
                            function (userData) {
                                if (userData != null) {
                                    $("#points-" + post.data.id).text("(" + userData.GivenCount + " • " + userData.ReceivedCount + ")");
                                    $("#avatar-" + post.data.id).append("<a href=\"/user/{0}\" class=\"avatar\" style=\"background-image:url({1})\"></a></div>".format(post.data.author, userData.SteamAvatar));
                                }
                            });
                    }
                );
            });
        }

        function GetSteamInfo(steamId) {


        }


        $(document).ready(function () { GetRedditInfo('@Model.Thread.ThingID'); });
    </script>
}
<div class="pif">
    <hgroup class="title">
        <h2 style="margin-bottom: 10px">@ViewBag.Title</h2>
    </hgroup>
    @if (@Model.GameCount > 1)
    {
        <script type="text/javascript">
            $(function () {
                $('#slider-@Model.Thread.ThingID').bxSlider({
                    displaySlideQty: 4,
                    moveSlideQty: 4,
                    auto: true,
                    controls: false,
                    autoHover: true,
                    infiniteLoop: true
                });
            });
        </script>
    }

    <ul class="games" id="slider-@Model.Thread.ThingID" style="width:250px">
        @foreach (var game in Model.Games)
        {
            <li>
                <img src="@game.ImageUrl" alt="@game.Name" title="@game.Name" height="69" width="184" /></li>
        }
    </ul>
    <div class="description" id="selfText-@Model.Thread.ThingID"></div>
    <div class="clearBoth"></div>

    @if (@Model.Thread.EndDate != SqlDateTime.MinValue)
    {
        <div style="float: right; padding: 7px;" class="createdTime">Ended <strong>@Html.TimeAgo(@Model.Thread.EndDate)</strong></div>
    }
    else
    {
        <div style="float: right; padding: 7px;" class="createdTime">Created <strong>@Html.TimeAgo(@Model.Thread.CreatedDate)</strong></div>
        if (@Model.Thread.UserID == AccountHelper.CurrentUser.id && Model.Thread.ThreadGames.Any(tg => tg.WinnerID == null))
        {
        <text>@Html.ActionLink("Edit", "Edit", "PiF", new { @Model.Thread.ThingID }, null) | @Html.ActionLink("Complete", "Complete", "PiF", new { Model.Thread.ThingID }, null)</text>
        }

    }
</div>
<div class="content">
    <div class="sub_navigation">
        @* TODO: Make these into partial views that can be loaded without reloading the page, using javascript.*@
        <ol>
            <li class="selected">@Html.ActionLink("0 comments", "View", "PiF", new { thingID = @Model.Thread.ThingID }, new { id = "commentCount" })</li>
            <li>@Html.ActionLink("0 Entries", "Entries", "PiF", new { thingID = @Model.Thread.ThingID })</li>
            <li>@Html.ActionLink("Stats", "Stats", "PiF")</li>
        </ol>
        <div class="clearBoth"></div>
    </div>
    <div class="pagination">
        <div class="results">Displaying 10-20</div>
        <div class="numbers">1 2 3  4 5</div>
        <div class="clearBoth"></div>
    </div>
    <br />
    <div class="comment_container" id="reddit-content"></div>
    <div class="clearBoth"></div>

    @*<div class="comment_container">
    <div class="parent_container">
        <div class="comment parent">
            <div class="avatar_container">@Html.ActionLink("Username", "Profile", "Account", new { username="Username"},  new { @class = "avatar", style="background-image: url(http://media.steampowered.com/steamcommunity/public/images/avatars/42/425e083dc84b0e261e6aa2552345e6218c4797bc_medium.jpg)" })
                <div class="avatar_overlay"></div>
            </div>
        <div class="body_container">
            <div class="author_name"><a href="/user/Arcticvzla">Arcticvzla</a> <span class="author_date">(1 day  ago)</span></div>
            <div class="user_body">
                <div class="comment_body markdown">
                    Comment Goes Here
                </div>
            </div>
        </div>
            </div></div></div>
    *@
</div>
