@using PiF.Models
@model PiF.Models.NewPiFModel

@{ ViewBag.Title = "Create a new PiF"; }

@section scripts {        
    @Styles.Render("~/Content/kendo")
@Scripts.Render("~/bundles/kendo")}
<script type="text/javascript">

    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function(key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }

</script>

@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>@ViewBag.Title</h1>
            </hgroup>
        </div>
    </section>
}
<p>
    @Html.Label("Grid", "Add the games you want to PiF")
</p>

@(Html.Kendo().Grid<PiFGame>().Name("NewGameGrid").ToolBar(toolbar => toolbar.Create()).DataSource(dataSource => dataSource.Ajax().Events(events => events.Error("error_handler")).Model(model => model.Id(p => p.ID)).Create(update => update.Action("Create", "NewGameGrid")).Read(read => read.Action("Read", "NewGameGrid")).Update(update => update.Action("Update", "NewGameGrid")).Destroy(update => update.Action("Delete", "NewGameGrid")).ServerOperation(false).Model(model => model.Id(p => p.ID))).Columns(columns =>
      {
          columns.Bound(p => p.Name).Width(400).EditorTemplateName("GameList");
          columns.Bound(p => p.Count).Width(80);
          columns.Bound(p => p.PointWorth).Width(80);
          columns.Bound(p => p.SteamID).Title("Steam ID").Width(80);
          columns.Command(commands =>
              {
                  commands.Edit();
                  commands.Destroy();
              }).Width(170);
      }).Editable(editing => editing.Mode(GridEditMode.InLine)).Pageable().Scrollable().Sortable().BindTo(SessionNewGamesRepository.All()))
<br />
@Html.ValidationMessage("Grid")
<section id="newPiFForm">
    @using (Html.BeginForm("New", "PiF"))
    {
        <fieldset>
            <legend>Sign in</legend>
            <ol>
                <li>
                    @Html.LabelFor(m => m.ThreadTitle)
                    @Html.TextBoxFor(m => m.ThreadTitle, new { maxlength = 300, width = "50%" })
                    @Html.ValidationMessageFor(m => m.ThreadTitle)
                </li>
                <li>
                    @Html.LabelFor(m => m.SelfText)
                    @Html.TextAreaFor(m => m.SelfText, new { maxlength = 900 })
                    @Html.ValidationMessageFor(m => m.SelfText)
                </li>
                @if (Model.CaptchaRequired)
                {
                    <li>
                        @Html.LabelFor(m => m.Captcha)
                        <img src="@Url.Content("http://reddit.com/captcha/" + Session["CaptchaID"] + ".png")" />
                        <div class="captcha-field">
                            @Html.TextBoxFor(m => m.Captcha, new { maxlength = 8 })
                        </div>
                        @Html.ValidationMessageFor(m => m.Captcha);
                    </li>
                }
            </ol>
            <input type="submit" value="Create PiF" class="button-blue" />
        </fieldset>
    }
</section>